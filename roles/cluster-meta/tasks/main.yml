---

- name: "cluster-meta: apply master taints"
  become: true
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  command: kubectl taint --overwrite node {{ ansible_hostname }} node-role.kubernetes.io/master=true:NoSchedule
  when:
  - "'master' in group_names"

- name: "cluster-meta: apply worker annotations"
  become: true
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  command: kubectl label --overwrite node {{ hostvars[item]['ansible_hostname'] }} node-role.kubernetes.io/worker=true
  with_items:
  - "{{ groups['worker'] }}"
  when:
  - "'master' in group_names"
  register: apply_worker_annotations
  retries: 5
  until: apply_worker_annotations is success

- name: "cluster-meta: apply system-upgrade annotations"
  become: true
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  command: kubectl label --overwrite node {{ hostvars[item]['ansible_hostname'] }} k3s-upgrade=true
  with_items:
  - "{{ groups['master'] }}"
  - "{{ groups['worker'] }}"
  when:
  - "'master' in group_names and (hostvars[item].k3s_system_upgrade is defined and hostvars[item].k3s_system_upgrade == true)"
  register: apply_system_upgrade_annotations
  retries: 5
  until: apply_system_upgrade_annotations is success

- name: "cluster-meta: remove system-upgrade annotations"
  become: true
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  command: kubectl label --overwrite node {{ hostvars[item]['ansible_hostname'] }} k3s-upgrade-
  with_items:
  - "{{ groups['master'] }}"
  - "{{ groups['worker'] }}"
  when:
  - "'master' in group_names and (hostvars[item].k3s_system_upgrade is not defined or hostvars[item].k3s_system_upgrade == false)"
  register: remove_system_upgrade_annotations
  retries: 5
  until: remove_system_upgrade_annotations is success

- name: "cluster-meta: apply longhorn annotations"
  become: true
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  command: kubectl label --overwrite node {{ hostvars[item]['ansible_hostname'] }} node.longhorn.io/create-default-disk=true
  with_items:
  - "{{ groups['worker'] }}"
  when:
  - "'master' in group_names and (hostvars[item].longhorn.enabled is defined and hostvars[item].longhorn.enabled == true)"
  register: apply_longhorn_annotations
  retries: 5
  until: apply_longhorn_annotations is success

- name: "cluster-meta: remove longhorn annotations"
  become: true
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  command: kubectl label --overwrite node {{ hostvars[item]['ansible_hostname'] }} node.longhorn.io/create-default-disk-
  with_items:
  - "{{ groups['worker'] }}"
  when:
  - "'master' in group_names and (hostvars[item].longhorn.enabled is not defined or hostvars[item].longhorn.enabled == false)"
  register: remove_longhorn_annotations
  retries: 5
  until: remove_longhorn_annotations is success

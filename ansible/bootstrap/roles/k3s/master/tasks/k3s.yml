---
- name: Copy K3s killall script
  register: k3s_killall
  template:
    src: "k3s-killall.sh.j2"
    dest: "/usr/local/bin/k3s-killall.sh"
    owner: root
    group: root
    mode: 0755
  when: ( k3sfile.changed == True )

- name: Copy K3s Uninstall Script
  register: k3s_uninstall
  template:
    src: "k3s-uninstall.sh.j2"
    dest: "/usr/local/bin/k3s-uninstall.sh"
    owner: root
    group: root
    mode: 0755
  when: ( k3sfile.changed == True )

- name: Copy K3s service file
  register: k3s_service
  template:
    src: "k3s.service.j2"
    dest: "{{ systemd_dir }}/k3s.service"
    owner: root
    group: root
    mode: 0755

- name: Create k3s Service Env file
  copy:
    content: ""
    dest: "{{ systemd_dir }}/k3s.service.env"
    owner: root
    group: root
    mode: 0400

- name: Create kubectl  link
  file:
    src: "/usr/local/bin/k3s"
    dest: "/usr/local/bin/kubectl"
    state: link

- name: Create crictl link
  file:
    src: "/usr/local/bin/k3s"
    dest: "/usr/local/bin/crictl"
    state: link

- name: Disable and stop K3s Service
  systemd:
    name: k3s
    enabled: no
    state: stopped
  when: ( k3sfile.changed == True )

- name: Enable and check K3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: restarted
    enabled: yes
  when: ( k3sfile.changed == True )

- name: Wait for node-token
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token
  when: ( k3sfile.changed == True )

- name: Register node-token file access mode
  stat:
    path: /var/lib/rancher/k3s/server
  register: p

- name: Change file access node-token
  file:
    path: /var/lib/rancher/k3s/server
    mode: "g+rx,o+rx"

- name: Read node-token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store Master node-token
  set_fact:
   token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Restore node-token file access
  file:
    path: /var/lib/rancher/k3s/server
    mode: "{{ p.stat.mode }}"

- name: Create directory .kube
  delegate_to: localhost
  become: no
  file:
    path: ~/.kube
    state: directory
    owner: '{{ local_user }}'
  when: ( k3sfile.changed == True and k3s_copy_config_local == true )

- name: Copy config file to user setup directory
  run_once: yes
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: '{{ REPO_ROOT }}/kubeconfig'
    owner: '{{ local_user }}'
    flat: yes
  when: ( k3sfile.changed == True )

- name: Copy config file to user home directory
  run_once: yes
  become: yes
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: '~/.kube/config'
    owner: '{{ local_user }}'
    flat: yes
  when: ( k3sfile.changed == True and k3s_copy_config_local == true )

- name: Replace https://localhost:6443 by https://{{ k3s_master_lb }}:6443
  run_once: yes
  become: no
  delegate_to: localhost
  replace:
    path: '{{ REPO_ROOT }}/kubeconfig'
    regexp: 'https://127.0.0.1:6443'
    replace: 'https://{{ k3s_master_lb }}:6443'
  when: ( k3sfile.changed == True )

- name: Replace https://localhost:6443 by https://{{ k3s_master_lb }}:6443 (Home File)
  run_once: yes
  become: no
  delegate_to: localhost
  replace:
    path: '~/.kube/config'
    regexp: 'https://127.0.0.1:6443'
    replace: 'https://{{ k3s_master_lb }}:6443'
  when: ( k3sfile.changed == True and k3s_copy_config_local == true )

---

- name: Ensure systemd unit file directory exists
  file:
    path: "{{ k3s_systemd_unit_directory }}"
    state: directory
    recurse: true
  when: (k3s_control_node and k3s_controller_count | length == 1)
        or (k3s_primary_control_node and k3s_controller_count | length > 1)

- name: Ensure k3s service unit file is present on control plane
  template:
    src: k3s.service.j2
    dest: "{{ k3s_systemd_unit_directory }}/k3s.service"
  when: (k3s_control_node and k3s_controller_count | length == 1)
        or (k3s_primary_control_node and k3s_controller_count | length > 1)
  notify:
    - reload systemd

- meta: flush_handlers

- name: Ensure k3s is symlinked into the installation destinations
  file:
    src: "{{ k3s_install_dir }}/k3s-{{ k3s_release_version }}"
    dest: "{{ k3s_install_dir }}/{{ item }}"
    state: link
  notify:
    - restart k3s
  loop:
    - k3s
    - kubectl
    - crictl
    - ctr

- name: Ensure k3s control plane is started
  systemd:
    name: k3s
    state: started
    enabled: true
    scope: "{{ k3s_systemd_context }}"
  when: (k3s_control_node and k3s_controller_count | length == 1)
        or (k3s_primary_control_node and k3s_controller_count | length > 1)

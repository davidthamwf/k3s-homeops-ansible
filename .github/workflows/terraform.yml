name: 'Azure E2E'
#on: [pull_request]
on:
  issue_comment:
    types: [created, edited]
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      # - name: Install SSH key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     name: id_rsa # optional

      - name: Fetch issue info
        uses: octokit/request-action@v2.x
        id: get_issue_info
        with:
          route: GET ${{ github.event.issue.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse issue info
        id: parse_issue_info
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.get_issue_info.outputs.data }}
          pull_request_url: "pull_request.url"
      - name: Fetch PR info
        uses: octokit/request-action@v2.x
        id: get_pr_ref
        with:
          route: GET ${{ steps.parse_issue_info.outputs.pull_request_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse PR info
        id: parse_pr_info
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.get_pr_ref.outputs.data }}
          ref: "head.ref"

      - name: 'Checkout'
        uses: actions/checkout@master
        if: github.event.comment.body == 'OK to test'

        with:
          ref: ${{ steps.parse_pr_info.outputs.ref }}

      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        if: github.event.comment.body == 'OK to test'
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: 'test/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        if: github.event.comment.body == 'OK to test'
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'test/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        if: github.event.comment.body == 'OK to test'
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: 'test/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        if: github.event.comment.body == 'OK to test'
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'test/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      #- name: 'Terraform Apply'
      #  uses: hashicorp/terraform-github-actions@master
      #  with:
      #    tf_actions_version: 0.12.21
      #    tf_actions_subcommand: 'apply'
      #    tf_actions_working_dir: 'test/terraform'
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #    ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      #    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #    ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  ansible:
    name: Setup Ansible
    needs: terraform
    runs-on: ubuntu-latest
    container: cytopia/ansible:latest-azure
    steps:
      - run: |
          ansible --version

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.0.1
  name: sonarr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: rook-ceph-block

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.0.1
  name: sonarr
  namespace: default
spec:
  ports:
  - name: http
    port: 8989
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/name: sonarr
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.0.1
  name: sonarr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonarr
      app.kubernetes.io/name: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/name: sonarr
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/sonarr:2.0.0.5337-ls99
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 10
        name: sonarr
        ports:
        - containerPort: 8989
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 10
        resources: {}
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /downloads
          name: downloads
          subPath: nzbget/downloads
        - mountPath: /tv
          name: tv
          subPath: tv
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config
      - name: downloads
        persistentVolumeClaim:
          claimName: nfs-tank-share-pvc
      - name: tv
        persistentVolumeClaim:
          claimName: nfs-tank-media-pvc

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.0.1
  name: sonarr
  namespace: default
spec:
  rules:
  - host: sonarr.$DOMAIN
    http:
      paths:
      - backend:
          serviceName: sonarr
          servicePort: http
        path: /
  tls:
  - hosts:
    - sonarr.$DOMAIN
    secretName: null

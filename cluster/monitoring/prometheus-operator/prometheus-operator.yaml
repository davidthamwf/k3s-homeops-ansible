---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    fluxcd.io/ignore: "false"
    fluxcd.io/automated: "false"
    fluxcd.io/tag.grafana: semver:~6
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 8.4.0
  values:
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: false
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 10Gi
        # tolerations:
        # - key: "arm"
        #   operator: "Exists"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
    grafana:
      image:
        repository: grafana/grafana
        tag: 6.5.1
      # tolerations:
      # - key: "arm"
      #   operator: "Exists"
      deploymentStrategy:
        type: Recreate
      podAnnotations:
        backup.velero.io/backup-volumes: storage
      persistence:
        enabled: true
        storageClassName: "rook-ceph-block"
        size: 10Gi
        accessModes:
          - ReadWriteOnce
      env:
        GF_EXPLORE_ENABLED: true
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
      plugins:
        - natel-discrete-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: ""
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          ceph-cluster:
            url: https://grafana.com/api/dashboards/2842/revisions/10/download
            datasource: Prometheus
          ceph-osd:
            url: https://grafana.com/api/dashboards/5336/revisions/3/download
            datasource: Prometheus
          ceph-pools:
            url: https://grafana.com/api/dashboards/5342/revisions/3/download
            datasource: Prometheus
          vernemq:
            url: https://raw.githubusercontent.com/vernemq/vernemq/master/metrics_scripts/grafana/VerneMQ%20Node%20Metrics.json
            datasource: Prometheus
          velero:
            url: https://grafana.com/api/dashboards/11055/revisions/2/download
            datasource: Prometheus
          flux:
            url: https://grafana.com/api/dashboards/10475/revisions/1/download
            datasource: Prometheus
          # cable-modem-stats:
          #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/prometheus-operator/grafana-dashboards/cable_modem_stats.json
          #   datasource: influxdb
          # comcast-sucks:
          #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/prometheus-operator/grafana-dashboards/comcast_sucks.json
          #   datasource: influxdb
          # home-assistant:
          #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/prometheus-operator/grafana-dashboards/home_assistant.json
          #   datasource: influxdb
          # ups:
          #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/prometheus-operator/grafana-dashboards/ups.json
          #   datasource: influxdb
          # netdata:
          #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/prometheus-operator/grafana-dashboards/netdata.json
          #   datasource: Prometheus
      additionalDataSources:
        - name: loki
          type: loki
          access: proxy
          url: http://loki.logs.svc.cluster.local:3100
        - name: influxdb
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: telegraf
        - name: cable_modem_stats
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: cable_modem_stats
        - name: comcast
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: comcast
        - name: home_assistant
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: home_assistant
        - name: speedtests
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: speedtests
        - name: uptimerobot
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: uptimerobot
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    prometheus-node-exporter:
      tolerations:
        - key: "arm"
          operator: "Exists"
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
      prometheusSpec:
        #        image:
        #          repository: quay.io/prometheus/prometheus
        #          tag: v2.9.1
        retention: 30d
        enableAdminAPI: true
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 100Gi
        # tolerations:
        # - key: "arm"
        #   operator: "Exists"
        additionalScrapeConfigs:
          - job_name: "netdata-scrape"
            metrics_path: "/api/v1/allmetrics"
            params:
              # format: prometheus | prometheus_all_hosts
              # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP
              format: [prometheus]
            honor_labels: true
            static_configs:
              - targets:
                  - k3s-0:19999
                  - k3s-1:19999
                  - k3s-2:19999
                  - fw.holthome.net:19999
                  - pve-01.holthome.net:19999
                  - pve-02.holthome.net:19999
                  - pve-03.holthome.net:19999
                  - pve-05.holthome.net:19999
                  - plex.holthome.net:19999
          - job_name: "ceph-scrape"
            params:
              # format: prometheus | prometheus_all_hosts
              # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP
              #format: [prometheus]
            honor_labels: true
            static_configs:
              - targets:
                  - pve-01.holthome.net:9283
                  - pve-02.holthome.net:9283
                  - pve-03.holthome.net:9283
            # - job_name: "wmi-exporter-scrape"
            #   metrics_path: "/metrics"
            #   params:
            #     format: [prometheus]
            #   honor_labels: true
            #   static_configs:
            #     - targets:
            #         - nvr:9182
          # - job_name: "home-assistant"
          #   scrape_interval: 60s
          #   metrics_path: /api/prometheus
          #
          #   scheme: https
          #   static_configs:
          #     - targets: ["ha.holthome.net:443"]
  valueFileSecrets:
    - name: "prometheus-operator-helm-values"
